webpackJsonp([1],{0:function(e,n,t){t(72),e.exports=t(64)},18:function(e,n,t){"use strict";function s(e){return e&&e.__esModule?e:{default:e}}function i(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}function a(e,n){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!n||"object"!=typeof n&&"function"!=typeof n?e:n}function o(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function, not "+typeof n);e.prototype=Object.create(n&&n.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),n&&(Object.setPrototypeOf?Object.setPrototypeOf(e,n):e.__proto__=n)}Object.defineProperty(n,"__esModule",{value:!0}),n.TypingIndicatorPlugin=n.TypingStatusMessage=void 0;var r=function(){function e(e,n){for(var t=0;t<n.length;t++){var s=n[t];s.enumerable=s.enumerable||!1,s.configurable=!0,"value"in s&&(s.writable=!0),Object.defineProperty(e,s.key,s)}}return function(n,t,s){return t&&e(n.prototype,t),s&&e(n,s),n}}(),l=t(5),c=t(31),u=s(c),d=n.TypingStatusMessage=function(e){function n(e){i(this,n);var t=a(this,(n.__proto__||Object.getPrototypeOf(n)).call(this));return t.value=e,t}return o(n,e),n}(l.TypedMessage);d.STATUS={TYPING:1,FINISHED:0},d.sendOptions={transient:!0},(0,l.messageField)(["value"])(d),(0,l.messageType)(-100)(d);var m=function(e){function n(e){i(this,n);var t=a(this,(n.__proto__||Object.getPrototypeOf(n)).call(this));return t._client=e,t._handleMessage=t._handleMessage.bind(t),t._reset(),t}return o(n,e),r(n,[{key:"_reset",value:function(){this.typingClients=[],this._typingClientsActiveTimers={},this._lastSendStatus={type:null,timestamp:0}}},{key:"setConversation",value:function(e){this._conversation&&(this._conversation.off("_typingstatusmessage",this._handleMessage),this._reset()),e.on("_typingstatusmessage",this._handleMessage),this._conversation=e}},{key:"_handleMessage",value:function(e){var n=e.from,t=e.value;this._updateTypingClients(n,t)}},{key:"_updateTypingClients",value:function(e,n){var t=this,s=void 0!==this._typingClientsActiveTimers[e],i=n===d.STATUS.TYPING;this._typingClientsActiveTimers[e]&&clearTimeout(this._typingClientsActiveTimers[e]),i?this._typingClientsActiveTimers[e]=setTimeout(function(){t._updateTypingClients(e,d.STATUS.FINISHED)},5e3):delete this._typingClientsActiveTimers[e],s^i&&(this.typingClients=Object.keys(this._typingClientsActiveTimers),this.emit("change"))}},{key:"updateStatus",value:function(e){var n=this;return Promise.resolve().then(function(){var t=n._conversation;if(!t)throw new Error("must set a Conversation before updating status.");if(n._lastSendStatus){if(e===d.STATUS.TYPING){if(n._lastSendStatus.timestamp+3e3>Date.now())return;var s=new d(d.STATUS.TYPING);return n._lastSendStatus={type:d.STATUS.TYPING,timestamp:Date.now()},t.send(s)}if(e===d.STATUS.FINISHED){if(n._lastSendStatus.type===d.STATUS.FINISHED)return;if(n._lastSendStatus.timestamp+5e3<Date.now())return;var i=new d(d.STATUS.FINISHED);return n._lastSendStatus={type:d.STATUS.FINISHED,timestamp:0},t.send(i)}}})}}]),n}(u.default);n.TypingIndicatorPlugin={name:"test",messageClasses:[d],beforeMessageDispatch:function(e,n){return e.type!==d.TYPE||(n.emit("_typingstatusmessage",e),!1)},onIMClientCreate:function(e){e.createTypingIndicator=function(){return new m(e)}}}},33:function(e,n){},34:function(e,n){},35:function(e,n){},36:function(e,n){},37:function(e,n){},64:function(e,n,t){"use strict";function s(e){return e&&e.__esModule?e:{default:e}}var i=t(9),a=s(i);a.default.module("leanMessage").run(["$templateCache",function(e){e.put("app/conversation/conversation.html",'<md-sidenav class="menu md-sidenav-left md-whiteframe-z2" layout="column" ng-class="{ \'under-mask\': !conversation.isMenuOpen } " md-component-id="menu" md-is-open="conversation.isMenuOpen" md-is-locked-open="$mdMedia(\'gt-sm\') || !currentConversation">\n  <div flex layout="column" style="overflow:auto">\n    <div class="logo">LeanMessage</div>\n    <md-list flex>\n\n      <!-- Robots List-->\n      <md-divider></md-divider>\n      <md-subheader class="md-no-sticky">机器人</md-subheader>\n      <md-list-item ng-repeat="conv in sysConvs | orderBy:\'-lastMessageAt\' track by conv.id" ng-click="changeTo(conv)" ng-class="{\'active\': conv.id === currentConversation.id}">\n        <p layout="row" layout-align="center center">\n          {{::conv.name}}\n          <span class="last-message" flex>{{conv.lastMessage.text}}</span>\n          <span ng-if="conv.unreadMessagesCount" class="unreadCount">{{conv.unreadMessagesCount}}</span>\n        </p>\n      </md-list-item>\n      <div class="empty-list-hint" layout-padding>此应用还未创建系统对话</div>\n      <!-- Robots List End -->\n\n      <!-- Transiant Convsations List-->\n      <md-divider></md-divider>\n      <md-subheader class="md-no-sticky">临时聊天室</md-subheader>\n      <md-list-item ng-repeat="conv in transConvs | orderBy:\'-lastMessageAt\' track by conv.id" ng-click="changeTo(conv)" ng-class="{\'active\': conv.id === currentConversation.id}">\n        <p layout="row" layout-align="center center">\n          {{::conv.name}}\n          <span class="last-message" flex>{{conv.lastMessage.from}}<span ng-if="conv.lastMessage.from">: </span>{{conv.lastMessage.text}}</span>\n          <span ng-if="conv.unreadMessagesCount" class="unreadCount">{{conv.unreadMessagesCount}}</span>\n        </p>\n      </md-list-item>\n      <div class="empty-list-hint" layout-padding>此应用还未创建聊天室</div>\n      <!-- Transiant Convsations List End -->\n\n      <!-- Group Conversations List -->\n      <md-divider></md-divider>\n      <md-subheader class="md-no-sticky">群聊</md-subheader>\n      <md-list-item ng-repeat="conv in normalConvs | orderBy:\'-lastMessageAt\' track by conv.id" ng-if="(conv.members.length > 2)" ng-click="changeTo(conv)" ng-class="{\'active\': conv.id === currentConversation.id}">\n        <p layout="row" layout-align="center center">\n          {{conv.name || \'群 \' + conv.id.slice(-4) }}\n          <span class="last-message" flex>{{conv.lastMessage.from}}<span ng-if="conv.lastMessage.from">: </span>{{conv.lastMessage.text}}</span>\n          <span ng-if="conv.unreadMessagesCount" class="unreadCount">{{conv.unreadMessagesCount}}</span>\n        </p>\n      </md-list-item>\n      <div class="empty-list-hint" layout-padding>在单聊中邀请成员开始群聊</div>\n      <!-- Group Conversations List End -->\n\n      <!-- Single Conversations List -->\n      <md-divider></md-divider>\n      <md-subheader class="md-no-sticky">单聊</md-subheader>\n      <md-list-item ng-repeat="conv in normalConvs | orderBy:\'-lastMessageAt\' track by conv.id" ng-if="conv.members.length === 2" ng-click="changeTo(conv)" ng-class="{\'active\': conv.id === currentConversation.id}">\n        <p layout="row" layout-align="center center">\n          {{getSingleConvTarget(conv.members)}}\n          <span class="last-message" flex>{{conv.lastMessage.text}}</span>\n          <span ng-if="conv.unreadMessagesCount" class="unreadCount">{{conv.unreadMessagesCount}}</span>\n        </p>\n      </md-list-item>\n      <div class="empty-list-hint" layout-padding>在聊天窗口点击任意用户 ID 开始单聊</div>\n    </md-list>\n  </div>\n  <!-- Single Conversations List End -->\n\n  <!--Personal Info-->\n  <md-divider></md-divider>\n  <div class="user" layout layout-align="center center" layout-padding>\n    <!--<img gravatar-src-once="transientEmail" gravatar-size="40">-->\n    <span flex>当前用户：{{imClient.id}}</span>\n    <md-button class="md-icon-button" aria-label="Logout" ng-click="logout()">\n      <md-icon>exit_to_app</md-icon>\n    </md-button>\n  </div>\n  <!--Personal Info End-->\n</md-sidenav>\n\n<!-- Nested Views for conversations.message -->\n<div layout flex ui-view>\n</div>\n\n<!-- NetWorkErrorMask -->\n<div class="network-error" layout="column" layout-align="center center" ng-if="networkError">\n  <md-icon>{{ networkErrorIcon }}</md-icon>\n  <div>\n    {{ networkError }}\n    <md-button ng-click="retry()" ng-if="networkShowRetry">立即重试</md-button>\n  </div>\n</div>'),e.put("app/login/logging.html","<h1>正在登录……</h1>"),e.put("app/login/login.html",'<div class="login-container" layout layout-align="center center" flex>\n  <md-whiteframe class="md-whiteframe-z1 login-frame" layout layout-align="center center">\n    <md-content class="loginForm" layout-align="center" layout="column" flex>\n      <form name="loginForm" ng-submit="login()" layout="column" layout-align="center" flex>\n        <div class="logo">LeanMessage</div>\n        <div class="client-form" layout="column">\n          <md-input-container>\n            <label>ID</label>\n            <input ng-model="user.id" required>\n          </md-input-container>\n          <md-button flex ng-click="login()">开始聊天</md-button>\n        </div>\n      </form>\n    </md-content>\n  </md-whiteframe>\n</div>\n'),e.put("app/components/message/message.html",'<div ng-if="displayTime" class="time">{{::message.timestamp | date:\'MM-dd HH:mm\'}}</div>\n<div class="message" ng-if="::message.id" ng-class="::{mine: isMine}" layout="column">\n    <div class="user" ng-if="::!isMine" ng-click="onNameClick()">{{ ::message.from }}</div>\n    <div layout layout-align="start end">\n        <span class="tips" title="{{groupReadClients}}" ng-if="groupReadClients">{{ groupReadHint }}</span>\n        <span class="tips" ng-if="isLastDelivered ">已送达</span>\n        <span class="tips" ng-if="isLastRead">已读</span>\n        <md-icon ng-if="message.status === MessageStatus.SENDING">reply</md-icon>\n        <md-icon ng-if="message.status === MessageStatus.FAILED">error</md-icon>\n        <div class="image" ng-if="::message.type === ImageMessage.TYPE">\n            <a ng-href="{{ ::message.getFile().url() }}" target="_blank">\n                <img ng-src="{{ ::message.getFile().thumbnailURL(260, 360) }}">\n            </a>\n        </div>\n        <div class="content" ng-if="::message.text">{{ ::message.text }}</div>\n    </div>\n</div>\n\n<div class="tips" ng-if="::!message.id">{{ message.text }}</div>'),e.put("app/conversation/conversationMessage/conversation.message.html",'<div flex layout="column">\n\n  <md-toolbar>\n    <div class="md-toolbar-tools">\n      <md-button class="md-icon-button menu-button" aria-label="Menu" hide-gt-sm ng-click="toggle(\'menu\')">\n        <md-icon>menu</md-icon>\n        <span ng-if="hasUnreadMessage" class="notice"></span>\n        <span ng-if="totalUnreadMessagesCount" class="unreadCount">{{totalUnreadMessagesCount}}</span>\n      </md-button>\n      <h2>\n        <span ng-if="currentConversation.members.length !== 2">{{ currentConversation ? (currentConversation.name || \'群 \' + currentConversation.id.slice(-4)) : \'\' }}</span>\n        <span ng-if="currentConversation.members.length === 2">{{ getSingleConvTarget(currentConversation.members) }}</span>\n      </h2>\n      <span flex></span>\n\n      <md-button class="md-icon-button" aria-label="Add Clients" ng-if="!currentConversation.system" ng-click="showAddUserDialog($event)">\n        <md-icon>add</md-icon>\n      </md-button>\n      <md-button ng-if="currentConversation.members.length > 2" class="md-icon-button" aria-label="Online Clients" hide-gt-md ng-click="toggle(\'online\')">\n        <md-icon>group</md-icon>\n      </md-button>\n    </div>\n  </md-toolbar>\n\n  <!--infinite-list-->\n  <md-content infinite-list infinite-scroll="loadMoreMessages()" layout-padding flex class="messages">\n    <div class="messages-wrapper">\n      <!--messages-->\n      <message ng-repeat="(index, message) in messages" message="message" previous-message="::messages[index - 1]" next-message="messages[index + 1]" last-delivered-at="currentConversation.lastDeliveredAt" last-read-at="currentConversation.lastReadAt" group-last-read-at="currentConversation.lastReadTimestamps" is-group="::currentConversation.members.length > 2" on-name-click="createSingleConv(message.from)" is-mine="::message.from == imClient.id"></message>\n      <!--messages end-->\n      <div id="message-view-bottom"></div>\n    </div>\n  </md-content>\n  <!--infinite-list End-->\n  <div class="typing-indicator" ng-show="typingClients">\n    <span>{{typingClients}}</span>\n  </div>\n  <md-content layout layout-align="center center" class="editor-wrapper">\n    <form>\n      <input class="ng-hide" id="file-image" multiple="multiple" type="file" accept="image/*" ng-upload-change="sendImage($event)">\n      <label for="file-image" class="md-button md-icon-button" aria-label="Image"><md-icon>image</md-icon></label>\n    </form>\n    <form class="editor" ng-submit="sendText()" layout layout-align="center center" flex>\n      <md-input-container md-no-float flex class="textarea">\n        <textarea ng-model="draft" placeholder="说点什么……" ng-keypress="editorChangedHandler($event)"></textarea>\n      </md-input-container>\n      <md-button class="md-icon-button" aria-label="Send" ng-click="sendText()">\n        <md-icon>send</md-icon>\n      </md-button>\n    </form>\n  </md-content>\n</div>\n\n<!--members list -->\n<md-sidenav id="online-aside" ng-show="currentConversation.members.length > 2" class="md-sidenav-right md-whiteframe-z2" ng-class="{ \'under-mask\': !conversation.isMenuOpen } " md-component-id="online" md-is-locked-open="$mdMedia(\'gt-md\')" layout="column">\n  <md-toolbar>\n    <div class="md-toolbar-tools">\n      <!--<md-button class="md-icon-button" aria-label="Back" hide-gt-sm ng-click="conversationMessage.close(\'online\')">-->\n        <!--<md-icon>arrow_back</md-icon>-->\n      <!--</md-button>-->\n      <h2>群聊成员 ({{currentConversation.members.length}})</h2>\n      <span flex></span>\n      <!--<md-button class="md-icon-button" aria-label="Search" ng-click="conversationMessage.toggle(\'online-search\')">-->\n        <!--<md-icon>search</md-icon>-->\n      <!--</md-button>-->\n    </div>\n  </md-toolbar>\n  <md-list class="square-clients" flex>\n    <md-list-item ng-repeat="clientId in currentConversation.members.slice(0, maxResultsAmount)" ng-click="createSingleConv(clientId)">\n      <p> {{ clientId }} </p>\n    </md-list-item>\n    <p ng-if="currentConversation.members.length > maxResultsAmount" class="max-results-amount-hint">最多显示 {{:: maxResultsAmount }} 位成员</p>\n  </md-list>\n</md-sidenav>\n\n\n<!--// TODO : 搜索当前群聊的成员-->\n<!--<md-sidenav id="online-aside"-->\n            <!--ng-if="conversationMessage.isGroupConversation && conversationMessage.conv.members.length"-->\n            <!--class=" md-sidenav-right md-whiteframe-z2"-->\n            <!--md-component-id="online-search"-->\n            <!--layout="column">-->\n  <!--<form ng-submit="$event.preventDefault()">-->\n    <!--<div class="search-box" layout layout-align="center center">-->\n      <!--<md-button class="md-icon-button" aria-label="Back" ng-click="conversationMessage.close(\'online-search\')">-->\n        <!--<md-icon>arrow_back</md-icon>-->\n      <!--</md-button>-->\n      <!--<input type="text" flex ng-model="conversationMessage.queryString" ng-change="conversationMessage.query(conversationMessage.queryString)" placeholder="搜索在线用户" md-sidenav-focus>-->\n      <!--<md-button class="md-icon-button" aria-label="Clear" ng-click="conversationMessage.clearQuery()" ng-hide="conversationMessage.queryString===\'\'">-->\n        <!--<md-icon>clear</md-icon>-->\n      <!--</md-button>-->\n    <!--</div>-->\n    <!--<md-divider></md-divider>-->\n\n  <!--</form>-->\n  <!--<md-list class="result" flex>-->\n    <!--<md-list-item ng-repeat="client in conversationMessage.queryClients.slice(0, conversationMessage.maxResultsAmount)" ng-click="conversationMessage.changeTo(\'@\' + client)">-->\n      <!--<p class="result-item"> {{ client }} </p>-->\n    <!--</md-list-item>-->\n    <!--<p ng-if="conversationMessage.queryClients.length > conversationMessage.maxResultsAmount" class="max-results-amount-hint">最多显示 {{:: conversationMessage.maxResultsAmount }} 条结果</p>-->\n  <!--</md-list>-->\n<!--</md-sidenav>-->\n')}])},65:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var s=t(5),i=t(11);t(33),n.default=function(){"ngInject";return{restrict:"E",templateUrl:"app/components/message/message.html",scope:{message:"=",previousMessage:"=",nextMessage:"=",lastDeliveredAt:"=",lastReadAt:"=",groupLastReadAt:"=",isGroup:"=",isMine:"=",onNameClick:"&"},link:function(e){if(Object.assign(e,{MessageStatus:s.MessageStatus,TextMessage:s.TextMessage,ImageMessage:i.ImageMessage}),e.message.type||(e.message.text="[不支持的消息类型]"),e.previousMessage){if(e.previousMessage.timestamp){var n=Math.floor(e.message.timestamp/6e4),t=Math.floor(e.previousMessage.timestamp/6e4);n!==t&&(e.displayTime=!0)}}else e.displayTime=!0;e.isMine&&(e.isGroup?e.unwatchGroupReceipts=e.$watch("groupLastReadAt",function(){if(e.groupLastReadAt){var n=Object.keys(e.groupLastReadAt),t=n.filter(function(n){return e.groupLastReadAt[n]>=e.message.timestamp});e.groupReadHint=t.length+" 人已读",e.groupReadClients=t.join(", "),t.length===n.length&&(e.groupReadHint="全部已读",e.unwatchGroupReceipts())}},!0):e.unwatch=e.$watchGroup(["lastReadAt","lastDeliveredAt"],function(){if(e.lastReadAt)if(e.nextMessage){if(e.nextMessage.timestamp){if(!(e.nextMessage.timestamp>e.lastReadAt))return e.isLastDelivered=e.isLastRead=!1,e.unwatch();e.message.timestamp<=e.lastReadAt&&(e.isLastRead=!0)}}else e.message.timestamp<=e.lastReadAt&&(e.isLastRead=!0);return e.isLastRead?void(e.isLastDelivered=!1):void(e.lastDeliveredAt&&(e.nextMessage?e.nextMessage.timestamp&&(e.nextMessage.timestamp>e.lastDeliveredAt?e.message.timestamp<=e.lastDeliveredAt&&(e.isLastDelivered=!0):e.isLastDelivered=!1):e.message.timestamp<=e.lastDeliveredAt&&(e.isLastDelivered=!0)))}))}}}},66:function(e,n,t){"use strict";function s(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(n,"__esModule",{value:!0});var i=t(15),a=s(i);n.default=["$timeout",function(e){"ngInject";return{transclude:!0,scope:{infiniteScroll:"&",infiniteScrollDistance:"=?"},template:"<div ng-transclude></div>",link:function(n,t){void 0===n.infiniteScrollDistance&&(n.infiniteScrollDistance=200);var s=!1,i=(0,a.default)(".messages-wrapper");t.on("scroll",function(){if(!s){var o=(0,a.default)(t[0]);if(o.scrollTop()<n.infiniteScrollDistance){s=!0;var r=i.height(),l=n.infiniteScroll();!function(e){l&&"function"==typeof l.then?l.then(e):e()}(function(){return e(function(){o.scrollTop(o.scrollTop()+i.height()-r),s=!1},0)})}}})}}}]},67:function(e,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.default=["LeanRT",function(e){"ngInject";return{isCached:function(){try{return null!==localStorage.getItem("clientId")}catch(e){return!1}},cache:function(e){localStorage.setItem("clientId",e)},getCachedInfo:function(){try{return localStorage.getItem("clientId")}catch(e){return}},login:function(n){return e.realtime.createIMClient(n)},isLoggedin:function(){return!!e.imClient},logout:function(){return localStorage.removeItem("clientId"),e.imClient.close()}}}]},68:function(e,n,t){"use strict";function s(e){if(Array.isArray(e)){for(var n=0,t=Array(e.length);n<e.length;n++)t[n]=e[n];return t}return Array.from(e)}Object.defineProperty(n,"__esModule",{value:!0}),t(34),n.default=["$scope","$rootScope","LeanRT","$state","$stateParams","$mdSidenav","userService",function(e,n,t,i,a,o,r){"ngInject";e.$mdSidenav=o,e.imClient=t.imClient,e.typingIndicator=t.imClient.createTypingIndicator(),e.normalConvs=[],e.transConvs=[],e.sysConvs=[],e.joinedTransConv=null,e.transientEmail="test@test.com",e.currentConversation=null,e.networkError=null,e.networkErrorIcon=null,e.networkShowRetry=!1;var l=function(){return e.imClient.getQuery().withLastMessagesRefreshed().containsMembers([e.imClient.id]).find()},c=function(){return e.imClient.getQuery().withLastMessagesRefreshed().equalTo("tr",!0).addDescending("lm").limit(1).find()},u=function(){return e.imClient.getQuery().withLastMessagesRefreshed().equalTo("sys",!0).find()};e.getSingleConvTarget=function(n){return n[0]===e.imClient.id?n[1]:n[0]};var d=function(){return[].concat(s(e.sysConvs),s(e.transConvs),s(e.normalConvs)).reduce(function(e,n){var t=n.unreadMessagesCount;return e+t},0)};e.getConversations=function(){return Promise.all([u(),c(),l()]).then(function(n){e.sysConvs=n[0],e.transConvs=n[1],e.normalConvs=n[2],e.$emit("unreadCountUpdate",d()),e.$digest()})},e.switchToConv=function(e){i.go("conversations.message",{convId:e.id})},e.changeTo=function(n){["online","menu"].map(function(e){return o(e).close()}),n.tr===!0?e.joinedTransConv!==n&&n.join().then(function(n){e.joinedTransConv=n,e.switchToConv(n)}):e.switchToConv(n)},e.createSingleConv=function(n){var t=e.normalConvs.find(function(t){return 2===t.members.length&&e.getSingleConvTarget(t.members)===n});return t?e.switchToConv(t):e.imClient.createConversation({members:[n],name:n+" 和 "+e.imClient.id+" 的对话",transient:!1,unique:!0}).then(function(n){e.switchToConv(n)}).catch(console.error.bind(console))},e.getConversations().then(function(){return e.transConvs[0]?e.transConvs[0].join().then(function(n){e.joinedTransConv=n}):console.warn("该应用还未创建聊天室，请前往 LeanCloud 控制台创建一个暂态对话（tr 为 true 的 Conversation）。")}).catch(console.error.bind(console)),e.logout=function(){r.logout().then(function(){t.imClient=null,i.go("login")})};var m=function(n,t){t.transient&&e.transConvs.indexOf(t)===-1&&e.transConvs.push(t),t.transient||e.normalConvs.indexOf(t)!==-1||e.normalConvs.push(t),e.$digest()},g=function(n,t){t.transient?e.transConvs.indexOf(t)===-1&&e.transConvs.push(t):e.normalConvs.indexOf(t)===-1&&e.normalConvs.push(t),e.$digest()},f=e.imClient;f.on("message",m),f.on("invited",g),f.on("unreadmessagescountupdate",function(){e.$emit("unreadCountUpdate",d())}),f.on("disconnect",function(){e.networkError="连接已断开",e.networkErrorIcon="sync_problem",e.$digest()}),f.on("offline",function(){e.networkError="网络不可用，请检查网络设置",e.networkErrorIcon="signal_wifi_off",e.networkShowRetry=!1,e.$digest()}),f.on("online",function(){e.networkError="网络已恢复",e.$digest()}),f.on("schedule",function(n,t){e.networkError=t/1e3+"s 后进行第 "+(n+1)+" 次重连",e.networkShowRetry=!0,e.$digest()}),f.on("retry",function(n){e.networkError="正在进行第 "+(n+1)+" 次重连",e.networkErrorIcon="sync",e.networkShowRetry=!1,e.$digest()}),f.on("reconnect",function(){e.networkError=null,e.joinedTransConv&&e.joinedTransConv.join(),e.$digest()}),f.on("reconnecterror",function(){e.networkError="重连失败，请刷新页面重试",e.networkErrorIcon="error_outline",e.$digest()}),e.$on("$destroy",function(){f.off("message",m),f.off("invited",g),["unreadmessagescountupdate","disconnect","offline","online","schedule","retry","reconnect","reconnecterror"].forEach(function(e){return f.off(e)})}),e.retry=function(){return setTimeout(function(){return t.realtime.retry()})}}]},69:function(e,n,t){"use strict";function s(e){return e&&e.__esModule?e:{default:e}}function i(e){if(Array.isArray(e)){for(var n=0,t=Array(e.length);n<e.length;n++)t[n]=e[n];return t}return Array.from(e)}Object.defineProperty(n,"__esModule",{value:!0}),t(35);var a=t(5),o=t(11),r=t(13),l=s(r),c=t(18);n.default=["$scope","LeanRT","$location","$timeout","$anchorScroll","$mdDialog","$mdSidenav","$stateParams",function(e,n,t,s,r,u,d,m){"ngInject";var g=function(){e.$digest(),s(function(){r("message-view-bottom")},0)};e.messages=[],e.imClient=n.imClient,e.hasLoadAllMessages=!1,e.maxResultsAmount=50,e.draft="",e.getCurrentConversation=n.imClient.getConversation(m.convId).then(function(n){e.$parent.currentConversation=n,e.messageIterator=n.createMessagesIterator({limit:20}),e.typingIndicator=e.$parent.typingIndicator,e.typingIndicator.setConversation(n),e.typingIndicator.on("change",function(){e.typingIndicator.typingClients.length?e.typingClients=e.typingIndicator.typingClients.join(", ")+" 正在输入":e.typingClients=null,e.$digest()});var t=function(n){e.messages.push({type:Symbol("system"),text:n.invitedBy+" 邀请 "+n.members+" 进入该对话",timestamp:new Date}),e.$digest()},s=function(e){e.transient||document.hidden||n.read()},i=function(n){n.transient&&n.type===a.Message.TYPE||(e.messages.push(n),g())},o=function(){e.$digest()},r=function(){!document.hidden&&n.unreadMessagesCount&&n.read()};return n.on("membersjoined",t),n.on("message",s),n.on("message",i),n.on("lastdeliveredatupdate",o),n.on("lastreadatupdate",o),n.on("lastreadtimestampsupdate",o),document.addEventListener("visibilitychange",r),e.$on("$destroy",function(){n.off("membersjoined",t),n.off("message",s),n.off("message",i),n.off("lastdeliveredatupdate",o),n.off("lastreadatupdate",o),n.off("lastreadtimestampsupdate",o),e.typingIndicator.off("change"),document.removeEventListener("visibilitychange",r)}),e.loadMoreMessages().then(function(){g()}),n.read(),n}),e.send=function(n){return console.log(n),e.getCurrentConversation.then(function(t){e.typingIndicator.updateStatus(0);var s=t.send(n,{receipt:2===t.members.length});return e.messages.push(n),s}).then(function(){g()}).catch(function(e){console.error(e)})},e.sendText=function(){if(e.draft){var n=new a.TextMessage(e.draft);return e.draft="",e.send(n)}},e.sendImage=function(n){var t=[].concat(i(n.target.files));return n.target.form.reset(),Promise.all(t.map(function(n){return new l.default.File(n.name,n).save().then(function(n){return e.send(new o.ImageMessage(n))})})).catch(console.error)},e.loadMoreMessages=function(){if(!e.hasLoadAllMessages)return e.messageIterator.next().then(function(n){n.done&&(e.hasLoadAllMessages=!0),e.messages=n.value.concat(e.messages),e.$digest()})},e.showAddUserDialog=function(n){var t=u.prompt().title("邀请成员加入会话").placeholder("用户 ID").ariaLabel("用户 ID").targetEvent(n).ok("邀请").cancel("取消");u.show(t).then(function(n){return e.getCurrentConversation.then(function(e){return e.add([n])})}).then(function(){}).catch(function(e){e&&console.log(e)})},e.toggle=function(e){d(e).toggle()},e.editorChangedHandler=function(n){if(console.log(e.draft),e.draft?e.typingIndicator.updateStatus(c.TypingStatusMessage.STATUS.TYPING):e.typingIndicator.updateStatus(c.TypingStatusMessage.STATUS.FINISHED),13===n.keyCode&&!n.shiftKey)return e.sendText(),n.preventDefault(),!1}}]},70:function(e,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.default=["$state","userService","LeanRT",function(e,n,t){"ngInject";var s=n.getCachedInfo();n.login(s).then(function(s){if(t.imClient=s,n.connected=!0,e.params&&e.params.redirect){var i=JSON.parse(e.params.redirect);return e.go(i.name,i.params)}e.go("conversations")}).catch(console.error.bind(console))}]},71:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),t(36),n.default=["$scope","LeanRT","$state","userService",function(e,n,t,s){"ngInject";e.user={},e.login=function(){s.login(e.user.id).then(function(e){n.imClient=e,s.cache(e.id),s.connected=!0,t.go("conversations")}).catch(console.error.bind(console))}}]},72:function(e,n,t){"use strict";function s(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(n,"__esModule",{value:!0}),n.app=void 0,t(15);var i=t(9),a=s(i);t(26),t(25),t(32);var o=t(5),r=t(13),l=s(r),c=t(11),u=t(39),d=t(18),m=t(74),g=s(m);t(37);var f=t(73),v=s(f),p=t(66),h=s(p),y=t(65),C=s(y),b=t(67),M=s(b),T=t(71),S=s(T),w=t(70),I=s(w),_=t(68),k=s(_),x=t(69),A=s(x),$=n.app="leanMessage",R="m7baukzusy3l5coew0b3em5uf4df5i2krky0ypbmee358yon",L="2e46velw0mqrq3hl2a047yjtpxn32frm0m253k258xo63ft9";l.default.init({appId:R,appKey:L}),a.default.module($,["ui.router","ngMaterial"]).config(g.default).config(["$mdThemingProvider",function(e){"ngInject";e.theme("default").primaryPalette("blue").accentPalette("grey")}]).factory("LeanRT",function(){var e={},n=new o.Realtime({appId:R,plugins:[c.TypedMessagesPlugin,u.GroupchatReceiptsPlugin,d.TypingIndicatorPlugin],region:"cn"});return e.realtime=n,e.imClient=null,e.currentConversation=null,e}).service("userService",M.default).run(v.default).directive("infiniteList",h.default).directive("message",C.default).directive("ngUploadChange",function(){return{scope:{ngUploadChange:"&"},link:function(e,n){n.on("change",function(n){e.ngUploadChange({$event:n})}),e.$on("$destroy",function(){n.off()})}}}).controller("loginCtrl",S.default).controller("loggingCtrl",I.default).controller("convCtrl",k.default).controller("convMsgCtrl",A.default)},73:function(e,n){"use strict";function t(e,n,t){"ngInject";e.$on("$stateChangeStart",function(e,s,i){if("login"!==s.name&&!t.isLoggedin())if(t.isCached()){if("logging"===s.name)return;e.preventDefault(),n.go("logging",{redirect:JSON.stringify({name:s.name,params:i})})}else setTimeout(function(){return n.go("login")},0)}),e.$on("unreadCountUpdate",function(n,t){e.totalUnreadMessagesCount=t,e.$digest()})}t.$inject=["$rootScope","$state","userService"],Object.defineProperty(n,"__esModule",{value:!0}),n.default=t},74:function(e,n){"use strict";function t(e,n){n.otherwise("/"),e.state("login",{url:"/",templateUrl:"app/login/login.html",controller:"loginCtrl"}).state("conversations",{url:"/conversations",templateUrl:"app/conversation/conversation.html",controller:"convCtrl"}).state("conversations.message",{url:"/:convId",templateUrl:"app/conversation/conversationMessage/conversation.message.html",controller:"convMsgCtrl"}).state("logging",{url:"/logging/:redirect",templateUrl:"app/login/logging.html",controller:"loggingCtrl"})}t.$inject=["$stateProvider","$urlRouterProvider"],Object.defineProperty(n,"__esModule",{value:!0}),n.default=t},77:function(e,n){}});